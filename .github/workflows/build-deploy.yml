name: Deployment job

on: 
    push:
      branches:
        - main
        - 'feature/*'
jobs:
    test:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: SetUp NodeJS version
            uses: actions/setup-node@v4
            with:
                node-version: 18

          - name: Cache NPM dependencies
            uses: actions/cache@v4
            with: 
                path: node_modules
                key: ${{runner.os}}-node_modules-${{hashFiles('package-lock.json')}}

          - name: Install dependencies
            run: npm install

          - name: Unit testing
            id: node-js-testing-setup
            run: npm test

          - name: Archive test result
            if: always()
            uses: actions/upload-artifact@v4
            with:
             name: Manuscript
             path: test-results.xml

    coverage:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: SetUp NodeJS version
            uses: actions/setup-node@v4
            with:
                node-version: 18

          - name: Cache NPM dependencies
            uses: actions/cache@v4
            with: 
                path: node_modules
                key: ${{runner.os}}-node_modules-${{hashFiles('package-lock.json')}}

          - name: Install dependencies
            run: npm install

          - name: Check code coverage
            run: npm run coverage
            continue-on-error: true

          - name: Archive coverage result
            if: always()
            uses: actions/upload-artifact@v4
            with:
             name: Coverage-result
             path: coverage
             retention-days: 5

    docker:   
        needs: [test, coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: Dockerhub login
            uses: docker/login-action@v3
            with:
                username: ${{secrets.DOCKER_USERNAME}}
                password: ${{secrets.DOCKER_PASSWORD}}

          - name: Docker Build
            uses: docker/build-push-action@v6
            with:
              context: .
              push: false
              tags: ${{secrets.DOCKER_USERNAME}}/node-web-app:v2
              
          - name: Run Docker Container
            run: |
             docker run -d --name node-web-app -p 3000:3000 ${{secrets.DOCKER_USERNAME}}/node-web-app:v2
             
             echo "Sleeping to allow the app to start..."
             sleep 5

             echo Testing local app endpoint...
             wget -q -O - 127.0.0.1:3000 | grep "Welcome to My Node.js Web App"

          - name: Registry push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: ${{secrets.DOCKER_USERNAME}}/node-web-app:v2
    

    update-manifest-dev:
      if: contains(github.ref, 'feature/')
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Clone manifest repo
          uses: actions/checkout@v4
          with: 
            repository: tobi-willy/CICD-manifests
            token: ${{secrets.MANIFEST_PAT}}
            path: manifest

        - name: Update image tag
          run: |
            cd manifest/overlays/dev
            sed -i "s|^[[:space:]]*newTag:.*|newTag: v2|" kustomization.yml


        - name: Commit and push changes
          run: |
           cd manifest
           git config user.name "GitHub Actions"
           git config user.email "actions@github.com"
           git add .
           git commit -m "Update image tag to v2"
           git push origin main

    
    update-manifest-prod:
      if: github.ref == 'refs/heads/main'
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Clone manifest repo
          uses: actions/checkout@v4
          with: 
            repository: tobi-willy/CICD-manifests
            token: ${{secrets.MANIFEST_PAT}}
            path: manifest

        - name: Update image tag
          run: |
            cd manifest/overlays/prod
            sed -i "s|^[[:space:]]*newTag:.*|newTag: v2|" kustomization.yaml


        - name: Commit and push changes
          run: |
           cd manifest
           git config user.name "GitHub Actions"
           git config user.email "actions@github.com"
           git add .
           git commit -m "Update image tag to v2"
           git push origin main

        




